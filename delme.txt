lp_and_tree extension

pre_iter0

model.write("my_model.lp", xxxnames=True)

-------------------------------

xxx write the tree?
No: just write non-ant lists for each node present in the node list

Note: it is easy to go from a pyomo var name to an lp file var name
  (the other way might be trouble if there are underscores in names)

(Let the c++ side build a map from the lp names to the nonant vector
xxxx do vector copying some other day; just use loops for now xxxx)


    root = scenario._mpisppy_node_list[0]
    assert root.name == "ROOT"
    root_nonants = np.fromiter((pyo.value(var) for var in root.nonant_vardata_list), float)

def lpize(varname):
    # convert varname to the string that will appear in the lp file

nonants_by_node = {nd.name: [lpize(var.name) for var in nd.nonant_vardata_list] for nd in scenario._mpisppy_node_list}
fname = f"{scenario.name}_nonants.json"
with open (fname, "w") as jfile:
   json.dump(nonants_by_node)
